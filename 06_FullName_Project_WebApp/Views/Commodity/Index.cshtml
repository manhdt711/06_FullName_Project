﻿
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <link href="../lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="../lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <style>
        /* The Modal (background) */
        .form-column {
            float: left;
            width: 50%;
            padding: 0 15px;
            box-sizing: border-box;
        }

        .input-field {
            width: 100%;
            /* Set all input fields to 100% width */
        }

        .modal {
            display: none;
            /* Hidden by default */
            position: fixed;
            /* Stay in place */
            z-index: 1;
            /* Sit on top */
            left: 0;
            top: 0;
            width: 100%;
            /* Full width */
            height: 100%;
            /* Full height */
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            /* Black w/ opacity */
        }

        /* Modal Content/Box */
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 60%;
            /* Could be more or less, depending on screen size */
        }

        /* Close Button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .red-trash {
            color: rgb(255, 0, 0) !important;
        }
    </style>
</head>
<body>
    <div id="popupEdit" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <form asp-controller="Commodity" asp-action="Edit" id="commodityForm" method="post">
                <div class="form-column">
                    <label for="CommodityId">id </label>
                    <input readonly type="text" name="CommodityId" id="CommodityIdEdit" class="form-control read">
                    <label for="CommodityName">Commodity Name:</label>
                    <input type="text" name="CommodityName" id="CommodityNameEdit" class="input-field">
                    <label for="UnitPrice">UnitPrice:</label>
                    <input type="number" name="UnitPrice" id="UnitPriceEdit" class="input-field">
                    <label for="UnitInStock">UnitInStock:</label>
                    <input type="number" name="UnitInStock" id="UnitInStockEdit" class="input-field">
                    <label id="createCategoryId" for="CategoryId">Category:</label>
                    <select  id="CategoryIdEdit" class="form-control">
                        <!-- Options will be dynamically added by JavaScript -->
                    </select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <div id="modalCreate" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            <form asp-controller="Commodity" asp-action="Create" id="commodityForm" method="post">
                <div class="form-column">
                    <label for="CommodityName">Commodity Name:</label>
                    <input type="text" name="CommodityName" id="CommodityName" class="input-field">
                    <label for="UnitPrice">UnitPrice:</label>
                    <input type="number" name="UnitPrice" id="UnitPrice" class="input-field">
                    <label for="UnitInStock">UnitInStock:</label>
                    <input type="number" name="UnitInStock" id="UnitInStock" class="input-field">
                    <label id="createCategoryId" for="CategoryId">Category:</label>
                    <select  id="CategoryIdCreate" class="form-control">
                        <!-- Options will be dynamically added by JavaScript -->
                    </select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
    <div class="row card">
        <div class="row p-3 d-flex justify-content-between">
            <div class="container">
                <label>
                    <h3>Manager Commodity</h3>
                </label>
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <div class="d-flex">
                <label class="form-control-label align-content-center mr-2">
                    Category:
                </label>
                <select name="ddCategory" id="ddCategory" class="form-control mr-3" style="min-width: fit-content">
                    <!-- Options will be dynamically added by JavaScript -->
                </select>
                <label class="form-control-label align-content-center mr-2">
                    Sort By:
                </label>
                <select id="ddSort" class="form-control mr-3" style="min-width: fit-content">
                    <option value="noSort"> </option>
                    <option value="commodityName">COMMODITY NAME</option>
                    <option value="unitPrice">UNIT PRICE</option>
                    <option value="unitInStock">UNIT IN STOCK</option>
                    <option value="categoryName">CATEGORY NAME</option>
                </select>
                <button id="btnSearch" class="btn btn-primary mr-3">
                    <i class="nc-icon nc-zoom-split"></i>
                    Search
                </button>
            </div>
            <div >
                <input type="button" id="btnCreate" value="Create" class="btn btn-outline-primary" />
            </div>
        </div>
            @* table *@
        <div class="row p-3">
            <div class="card strpied-tabled-with-hover">
                <div class="card-body table-full-width table-responsive">
                    <table id="table-gg" class="table table-hover"></table>
                </div>
            </div>
        </div>
        @* footer download *@
        <div class="row">
            <div class="card text-right">
                <div class="p-3">
                    <button class="btn btn-outline-success" id="downLoad" asp-controller="Commodity" asp-action="ExportToExcel">Excel</button>
                </div>
            </div>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>
    <script>
        $(document).ready(() => {
            getAllCommodity();
            loadDropDown();
        });
        // Function to get all commodities
        const getAllCommodity = () => {
            $.ajax({
                url: "https://localhost:7194/api/Commodity/GetCommodityManager",
                method: 'GET',
                contentType: "application/json",
                success: (data) => {
                    loadTableData(data);
                },
                error: () => {
                    alert("Data not found!");
                }
            });
        };
        // Function to load data into table
        const loadTableData = (data) => {
            // Clear table
            $("#table-gg").empty();
            // Add table header
            $("#table-gg").append(`

                                                <thead>
                                                    <tr>
                                                        <th style="width: 50px"></th>
                                                        <th>Commodity Name</th>
                                                        <th>Unit Price</th>
                                                        <th>Unit In Stock</th>
                                                        <th>Category Name</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                            `);
            // Add table rows
            data.forEach(item => {
                $("#table-gg tbody").append(`

                                                    <tr>
                                                        <td>
                                                            <a href="#" data-id="${item.commodityId}" class="delete-btn">
                                                                <i class="fa fa-trash red-trash"></i>
                                                            </a>
                                                        </td>
                                                        <td>
                                                            <a href="#" data-id="${item.commodityId}" class="edit-btn">${item.commodityName}</a>
                                                        </td>
                                                        <td>${item.unitPrice}</td>
                                                        <td>${item.unitInStock}</td>
                                                        <td>${item.categoryName}</td>
                                                    </tr>
                              `);
            });
            $("#table-gg").append(" </tbody>");
        };
        const loadDropDown = () => {
            $.ajax({
                url: "https://localhost:7194/api/CommodityCategory/GetCommodityCategory",
                method: 'GET',
                contentType: "application/json",
                success: (data) => {
                    $("#ddCategory").empty();
                    // Add "Search All" option
                    $("#ddCategory").append($('<option>', {
                        value: -1,
                        text: "<All Category>"
                    }));
                    // Append other options
                    $.each(data, function (index, category) {
                        $("#ddCategory").append($('<option>', {
                            value: category.categoryId,
                            text: category.categoryName
                        }));
                    });
                },
                error: () => {
                    alert("Data not found!");
                }
            });
        };
        //search
        $('#btnSearch').click(async function () {
            // Lấy giá trị của dropdown
            var idDD = $('#ddCategory').val();
            var sortBy = $('#ddSort').val();
            // Gửi yêu cầu AJAX
            await $.ajax({
                url: `https://localhost:7194/api/Commodity/GetByCategoryId/${idDD}`,
                method: 'GET',
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    if (sortBy === 'commodityName') {
                        data = _.sortBy(data, 'commodityName');
                    } else if (sortBy === 'unitPrice') {
                        data = _.sortBy(data, 'unitPrice');
                    } else if (sortBy === 'unitInStock') {
                        data = _.sortBy(data, 'unitInStock');
                    }else{

                    }
                    loadTableData(data);
                },
                error: function () {
                    alert("Data not found!");
                }
            });
        });

        // Bắt sự kiện thay đổi của dropdown
        $('#ddCategory').change(function () {
            var idDD = $(this).val();
            console.log("Selected value: " + idDD);
        });
        $('#ddSort').change(function () {
            var idDD = $(this).val();
            console.log("Selected value: " + idDD);
        });

        //show Popup Create
        var createPopup = $("#modalCreate");
        $('#btnCreate').click(async function () {
            await $.ajax({
                url: `https://localhost:7194/api/CommodityCategory/GetCommodityCategory`,
                method: 'GET',
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    // Clear existing options
                    $("#CategoryIdCreate").empty();
                    // Append new options
                    $.each(data, function (index, category) {
                        var option = $('<option></option>').attr('value', category.categoryId).text(category.categoryName);
                        $("#CategoryIdCreate").append(option);
                    });
                    createPopup.show();
                }, error: function () {
                    alert("Data not found!");
                }
            });
        });
        //btn delete
        $(document).on('click', '.delete-btn', async function () {
            let id = $(this).attr('data-id');
            await $.ajax({
                url: `https://localhost:7194/api/Commodity/Delete/${id}`,
                type: 'DELETE',
                success: function (response) {
                    location.reload();
                    console.log('Mặt hàng đã được xóa thành công');
                },
                error: function (xhr, status, error) {
                    console.error('Đã xảy ra lỗi khi xóa mặt hàng:', error);
                }
            });
        })
        var popupEdit = $("#popupEdit");
        $(document).on('click', '.edit-btn', async function () {
            let id = $(this).attr('data-id');
            // Gọi API để lấy danh mục
            await $.ajax({
                url: 'https://localhost:7194/api/CommodityCategory/GetCommodityCategory',
                method: 'GET',
                contentType: "application/json",
                success: function (categories) {
                    // Hiển thị popup khi dữ liệu được tải xong
                    popupEdit.show();
                    // Lấy dữ liệu của mặt hàng cần chỉnh sửa
                    $.ajax({
                        url: `https://localhost:7194/api/Commodity/GetById/${id}`,
                        method: 'GET',
                        contentType: "application/json",
                        success: function (data) {
                            console.log(data.UnitPrice);
                            // Điền dữ liệu vào các trường của popup
                            $("#CommodityIdEdit").val(data.commodityId);
                            $("#CommodityNameEdit").val(data.commodityName);
                            $("#UnitPriceEdit").val(data.unitPrice);
                            $("#UnitInStockEdit").val(data.unitInStock);
                            $("#CreateCategoryIdEdit").text(data.categoryName);
                            // Xóa tất cả các lựa chọn cũ
                            $("#CategoryIdEdit").empty();
                            // Thêm lựa chọn mới từ danh sách danh mục được tải
                            categories.forEach(function (category) {
                                $("#CategoryIdEdit").append(`<option value="${category.categoryId}">${category.categoryName}</option>`);
                            });

                            // Chọn tùy chọn có categoryId trùng khớp với selectedCategoryId
                            $("#CategoryIdEdit").val(data.categoryID);

                        }, error: function () {
                            alert("not found data!");
                        }
                    });
                }, error: function () {
                    alert("Failed to load categories.");
                }
            });
        });
        $(window).click(function (event) {
            if (event.target == popupEdit[0]) {
                popupEdit.hide();
            } else if (event.target == createPopup[0]) {
                createPopup.hide();
            }
        });
        $(document).on('click', '.close', function () {
            popupEdit.hide();
            createPopup.hide();
        });
    </script>
</body>
</html>