<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <link href="../lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="../lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <style>
        /* The Modal (background) */
        .form-column {
            float: left;
            width: 50%;
            padding: 0 15px;
            box-sizing: border-box;
        }

        .input-field {
            width: 100%; /* Set all input fields to 100% width */
        }

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 110%; /* Full height */
            overflow: auto;
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content/Box */
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 60%; /* Could be more or less, depending on screen size */
        }

        /* Close Button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>
<body>

    <!-- The Modal -->
    <div id="myModal" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <span class="close">&times;</span>
            @* this form using for 2 action(cancel order<user> and change status order <admin>) *@
            <form asp-action="DeleteOrderOrderChangeStatus" id="orderForm">
                    <p id="textModal"></p>
                    @* this id typeAction use for switch case *@
                    <input style="display:none;" type="text" id="typeAction" name="typeAction"><br><br>
                    <input style="display:none;" type="text" id="ordeId" name="orderId"><br><br>

                <input type="submit" value="Submit">
            </form>
        </div>

    </div>
    @* search and filter *@
    <h3>Search Order</h3>
    @if(@ViewBag.UserId == 0)
    {
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="fromDate">From:</label>
                        <input type="date" class="form-control" id="fromDate" name="fromDate">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="toDate">To:</label>
                        <input type="date" class="form-control" id="toDate" name="toDate">
                    </div>
                </div>
                <div class="col-md-5">
                    <button class="btn btn-primary" id="btnSearch">Filter</button>
                    <button class="btn btn-secondary" id="btnClear">Clear</button>
                </div>
            </div>
        </div>
    }


    @* loading  *@
    <div id="loadingIndicator" style="display: none; text-align: center; font-size:30px; padding-top: 30px;">
        <!-- You can use any loading animation here, for example, a spinner -->
        Loading...
    </div>
    @* show main table *@
    <table id="table-gg" class="table">
    </table>
</body>
<script src="../lib/jquery/dist/jquery.min.js"></script>
<script src="../lib/jquery/dist/jquery.js"></script>

<script>
    $(document).ready(() => {
        getAllOrder();
    });
    // get list Order
    const getAllOrder = () => {
        $('#loadingIndicator').show();
        $.ajax({
            url: `https://localhost:7194/api/Orders/GetAllOrder/${@ViewBag.UserId}`,
            method: 'GET',
            contentType: "application/json",
            success: (data) => { loadTableData(data);console.log(data) },
            error: () => {}
        })
    }
    const loadTableData = (data) => {
        $("#table-gg").empty();
        var htmlHeader = `
                                 <thead>
                                     <tr>
                                                 <th>commodityName</th>
                                                 <th>quantity</th>
                                                 <th>price</th>
                                                 <th style="color: red">Tototal payment</th>
                                                 <th>customerName</th>
                                                 <th>address</th>
                                                 <th>phoneNumber</th>
                                                 <th>note</th>
                                                 <th>OrderDate</th>
                                                 <th>Status</th>
                                             <th></th>
                                     </tr>
                                 </thead>
                                                                   `;
        $("#table-gg").append(htmlHeader);
        $("#table-gg").append("<tbody>");
        data.forEach(item => {
            var htmlBody = `
                                                                        <tr>
                                                                            <td>${item.commodityName}</td>
                                                                            <td>${item.quantity}</td>
                                                                            <td>${item.price} VND</td>
                                                                            <td>${(item.promotionId == 0) ? item.totalPayment + " VND" : item.totalPayment + " VND (have discount)"}</td>
                                                                            <td>${item.customerName}</td>
                                                                            <td>${item.address}</td>
                                                                            <td>${item.phoneNumber}</td>
                                                                            <td>${(item.note == null) ? "":item.note}</td>
                                                                                    <td>${item.orderDate}</td>
                                                                            <td>${item.status}</td>
                                                                            `;
            if (@ViewBag.UserId == 0) {
                // there are actions to pending and shipping 
                if (item.status === "pending") {
                    htmlBody += `<td  style="color: Aqua;"><a href="javascript:void(0)" data-id="${item.orderId}" id="myModalBtnShipping">Giao hàng đi</a></td></tr>`;
                } else if (item.status == "shipping") {
                    htmlBody += `<td style="color: blue;"><a href="javascript:void(0)" data-id="${item.orderId}" id="myModalBtnDone">Xác nhận giao hàng thành công</a></td></tr>`;
                } else if (item.status == "done") {
                    htmlBody += `<td style="color: green;">Hoàn thành</td></tr>`;
                } else {
                    htmlBody += `<td style="color: red;">Đơn đã bị hủy</td></tr>`;
                }
                // cancel order => to save satus is cancel or nothings 
            } else {
                if (item.status === "pending") {
                    htmlBody += `<td style="color: Aqua;"><a href="javascript:void(0)" data-id="${item.orderId}" id="myModalBtnCancel">Hủy đơn</a></td></tr>`;
                } else if (item.status == "done") {
                    htmlBody += `<td style="color: green;">Hoàn thành</td></tr>`;
                }
            }
        
            $("#table-gg").append(htmlBody);
        });
        $("#table-gg").append("</tbody>");
        $('#loadingIndicator').hide();
    }

    // js for modal
    var modal = document.getElementById("myModal");
    var span = document.getElementsByClassName("close")[0];
    // js for modal cancel order 
    $(document).on('click', '#myModalBtnCancel', async function () {
        let id = $(this).attr('data-id');
        $("#typeAction").val("delete");
        $("#ordeId").val(id);
        $("#textModal").text("Are you sure you want to cancel this order?");
        modal.style.display = "block";
    });

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
    span.onclick = function () {
        modal.style.display = "none";
    }

    //js for modal shipping
    $(document).on('click', '#myModalBtnShipping', async function () {
        let id = $(this).attr('data-id');
        $("#typeAction").val("changeStatusShipping");
        $("#ordeId").val(id);
        $("#textModal").text("Are you sure you want to shipping this order?");
        modal.style.display = "block";
    })
    //js for modal shiping done
    $(document).on('click', '#myModalBtnDone', async function () {
        let id = $(this).attr('data-id');
        $("#typeAction").val("changeStatusDone");
        $("#ordeId").val(id);
        $("#textModal").text("Are you sure that this order have success order?");
        modal.style.display = "block";
    })
    //Search Onclick
      //search
        $('#btnSearch').click(async function () {
        var fromDate = $('#fromDate').val();
        var toDate = $('#toDate').val();
        $('#loadingIndicator').show();
        $('#table-gg').empty();
        $.ajax({
            url: `https://localhost:7194/api/Orders/GetOrdersByDateRange/${fromDate}/${toDate}`,
            method: 'GET',
            contentType: "application/json",
            success: (data) => {
                if (data && data.length > 0) {
                    loadTableData(data);
                } else {
                    // Display an alert if the list is null or empty
                    alert('No data available for the selected date range.');
                }
            },
            error: () => { 
            }
        })
        });

        //clear
    $('#btnClear').click(async function () {
        getAllOrder();
    });

    document.addEventListener("DOMContentLoaded", function () {
        // Attach click event listener to the Filter button
        document.getElementById("btnSearch").addEventListener("click", function () {
            var fromDate = document.getElementById("fromDate").value;
            var toDate = document.getElementById("toDate").value;

            // Check if toDate is earlier than fromDate
            if (toDate && fromDate && toDate < fromDate) {
                alert("To date cannot be earlier than From date.");
                return false; // Prevent form submission or further action
            }
        });
    });

</script>

</html>